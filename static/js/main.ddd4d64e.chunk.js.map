{"version":3,"sources":["components/FeedbackOptions/FeedbackOptionsStyled.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Section/SectionStyled.js","components/Section/Section.js","components/Statistics/Statistics.js","components/App.js","index.js"],"names":["FeedbackOptionsStyled","styled","ul","FeedbackOptions","options","onLeaveFeedback","map","option","className","type","onClick","Notification","message","SectionStyled","section","Section","children","title","toUpperCase","Statistics","good","neutral","bad","total","percentage","App","state","name","setState","prev","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","this","countTotal","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRACaA,EAAwBC,IAAOC,GAAV,mH,OCyBnBC,EAtBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,cAACL,EAAD,UACGI,EAAQE,KAAI,SAAAC,GAAM,OACjB,6BACE,wBACEC,UAAU,cACVC,KAAK,SACLC,QAAS,kBAAML,EAAgBE,IAHjC,SAKGA,KANIA,SCGFI,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCFAC,EAAgBZ,IAAOa,QAAV,yFCUXC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC3B,OACE,eAACJ,EAAD,WACE,oBAAIL,UAAU,eAAd,SAA8BS,EAAMC,gBACnCF,MCiBQG,EArBI,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,IAAKC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAC/C,OACE,qCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,uBACA,wCAAWC,KACVC,GAAc,GAAK,oDAAuBA,EAAvB,WC8CXC,E,4MAlDbC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPjB,gBAAkB,SAAAsB,GAChB,EAAKC,UAAS,SAAAC,GAAI,sBACfF,EAAOE,EAAKF,GAAQ,O,EAGzBG,mBAAqB,kBACnB,EAAKJ,MAAMN,KAAO,EAAKM,MAAML,QAAU,EAAKK,MAAMJ,K,EAEpDS,gCAAkC,WAChC,IAAMR,EAAQ,EAAKG,MAAMN,KAAO,EAAKM,MAAML,QAAU,EAAKK,MAAMJ,IAEhE,OADeU,KAAKC,MAAyB,IAAlB,EAAKP,MAAMN,KAAcG,I,4CAItD,WACE,MAA+BW,KAAKR,MAA5BN,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBa,EAAaD,KAAKJ,qBAClBN,EAAaU,KAAKH,kCACxB,OACE,qCACE,cAAC,EAAD,CAASd,MAAM,wBAAf,SACE,cAAC,EAAD,CACEb,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiB6B,KAAK7B,oBAG1B,cAAC,EAAD,CAASY,MAAM,aAAf,SACIkB,EAGA,cAAC,EAAD,CACEf,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOY,EACPX,WAAYA,IAPd,cAAC,EAAD,CAAcZ,QAAQ,+B,GAnChBwB,aCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ddd4d64e.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nexport const FeedbackOptionsStyled = styled.ul`\r\n  display: flex;\r\n  .btnFeedback {\r\n    margin-right: 5px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FeedbackOptionsStyled } from './FeedbackOptionsStyled';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <FeedbackOptionsStyled>\r\n      {options.map(option => (\r\n        <li key={option}>\r\n          <button\r\n            className=\"btnFeedback\"\r\n            type=\"button\"\r\n            onClick={() => onLeaveFeedback(option)}\r\n          >\r\n            {option}\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </FeedbackOptionsStyled>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import styled from 'styled-components';\r\n\r\nexport const SectionStyled = styled.section`\r\n  .sectionTitle {\r\n    color: teal;\r\n    margin: 20px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { SectionStyled } from './SectionStyled';\r\n\r\nconst Section = ({ children, title }) => {\r\n  return (\r\n    <SectionStyled>\r\n      <h2 className=\"sectionTitle\">{title.toUpperCase()}</h2>\r\n      {children}\r\n    </SectionStyled>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, percentage }) => {\r\n  return (\r\n    <>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <br />\r\n      <p>Total: {total}</p>\r\n      {percentage >= 1 && <p>Positive feedback: {percentage}%</p>}\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  percentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Component } from 'react';\r\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\r\nimport Notification from './Notification/Notification';\r\nimport Section from './Section/Section';\r\nimport Statistics from './Statistics/Statistics';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  onLeaveFeedback = name => {\r\n    this.setState(prev => ({\r\n      [name]: prev[name] + 1,\r\n    }));\r\n  };\r\n  countTotalFeedback = () =>\r\n    this.state.good + this.state.neutral + this.state.bad;\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const total = this.state.good + this.state.neutral + this.state.bad;\r\n    const result = Math.floor((this.state.good * 100) / total);\r\n    return result;\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const countTotal = this.countTotalFeedback();\r\n    const percentage = this.countPositiveFeedbackPercentage();\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={['good', 'neutral', 'bad']}\r\n            onLeaveFeedback={this.onLeaveFeedback}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {!countTotal ? (\r\n            <Notification message=\"No feedback given\" />\r\n          ) : (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={countTotal}\r\n              percentage={percentage}\r\n            />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}